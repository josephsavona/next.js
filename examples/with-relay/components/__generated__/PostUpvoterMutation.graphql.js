/**
 * This file was generated by:
 *   relay-compiler
 *
 * @providesModule PostUpvoterMutation.graphql
 * @generated SignedSource<<4e9a12b13e2c222347c73979fce4328c>>
 * @relayHash 6c5d1792d4ffb042f761bc5e08e66902
 * @flow
 * @nogrep
 */

/* eslint-disable */

'use strict';

/*::
import type {ConcreteBatch} from 'relay-runtime';
export type UpdatePostInput = {
  id?: ?string;
  title?: ?string;
  url?: ?string;
  votes?: ?number;
};

export type PostUpvoterMutationResponse = {
  post?: ?PostUpvoterMutationResponse_post;
};

export type PostUpvoterMutationResponse_post = {
  id: string;
  votes: number;
};
*/


/*
mutation PostUpvoterMutation(
  $input: UpdatePostInput!
) {
  updatePost(input: $input) {
    post {
      id
      votes
    }
  }
}
*/

const batch /*: ConcreteBatch*/ = {
  "fragment": {
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "UpdatePostInput!",
        "defaultValue": null
      }
    ],
    "kind": "Fragment",
    "metadata": null,
    "name": "PostUpvoterMutation",
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input",
            "type": "UpdatePostInput!"
          }
        ],
        "concreteType": "UpdatePostPayload",
        "name": "updatePost",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "args": null,
            "concreteType": "Post",
            "name": "post",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "args": null,
                "name": "id",
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "args": null,
                "name": "votes",
                "storageKey": null
              }
            ],
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    ],
    "type": "Mutation"
  },
  "id": null,
  "kind": "Batch",
  "metadata": {},
  "name": "PostUpvoterMutation",
  "query": {
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "UpdatePostInput!",
        "defaultValue": null
      }
    ],
    "kind": "Root",
    "name": "PostUpvoterMutation",
    "operation": "mutation",
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input",
            "type": "UpdatePostInput!"
          }
        ],
        "concreteType": "UpdatePostPayload",
        "name": "updatePost",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "args": null,
            "concreteType": "Post",
            "name": "post",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "args": null,
                "name": "id",
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "args": null,
                "name": "votes",
                "storageKey": null
              }
            ],
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    ]
  },
  "text": "mutation PostUpvoterMutation(\n  $input: UpdatePostInput!\n) {\n  updatePost(input: $input) {\n    post {\n      id\n      votes\n    }\n  }\n}\n"
};

module.exports = batch;
